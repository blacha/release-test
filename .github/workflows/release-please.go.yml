name: Release
on:
  push:
    branches:
      - master
env:
  CLI_NAME: argo-expr


jobs:
  release_please:
    name: Release Please Pull Request
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name}}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: go
          token: ${{ secrets.GITHUB_TOKEN }}

  build_artifacts:
    name: Build artifacts
    permissions:
      contents: read
      id-token: write

    needs: release_please
    if: ${{ needs.release_please.outputs.release_created }}
    strategy:
        fail-fast: false
        matrix:
          include:
            - target: $CLI_NAME-x86_64-linux
              os: ubuntu-latest
              name: $CLI_NAME-x86_64-linux.tar.gz
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v4

      - name: Build Binary
        run: |
            go build -o ${{ matrix.target }}/$CLI_NAME

      - name: Pacakge release
        run: |
            cd ${{ matrix.target }}/
            cp ../README.md .
            cp ../CHANGELOG.md .
            cp ../LICENSE .
            tar czvf ${{ matrix.name }} *  
            cd -

      - name: Release | Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

  upload_artifacts:
    name: Add Build Artifacts to Release
    needs: [release_please, build_artifacts]
    runs-on: ubuntu-latest
    permissions:
      contents: write # Adding assets require permissions
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3

      - name: Create Checksums
        run: for file in ${CLI_NAME}-*/${CLI_NAME}-*; do openssl dgst -sha256 -r "$file" | awk '{print $1}' > "${file}.sha256"; done

      - name: Add Artifacts To Release
        run: |
          gh release upload ${{ needs.release_please.outputs.tag_name }} ${CLI_NAME}-*/${CLI_NAME}* --repo=${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
